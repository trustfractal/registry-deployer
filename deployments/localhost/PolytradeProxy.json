{
  "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_registryAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_kycLevel",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "hasPassedKYC",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xeea16fb7a0942993e346a7b32c97d6433cb278d8fed38826920e755ea0dcc518",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
    "transactionIndex": 0,
    "gasUsed": "388834",
    "logsBloom": "0x
    "blockHash": "0x42330253f22a33a42e1ec47b3c97a10a9a72d23e18f88eb7f7f406d159e10ae3",
    "transactionHash": "0xeea16fb7a0942993e346a7b32c97d6433cb278d8fed38826920e755ea0dcc518",
    "logs": [],
    "blockNumber": 4,
    "cumulativeGasUsed": "388834",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
    "plus"
  ],
  "numDeployments": 1,
  "solcInputHash": "516be628edcf8585aeee2df16415da71",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registryAddr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_kycLevel\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"hasPassedKYC\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Polytrade proxy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PolytradeProxy.sol\":\"PolytradeProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FractalRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.7.0 <0.9.0;\\n\\n/// @title Fractal registry v0\\n/// @author Antoni Dikov and Shelby Doolittle\\ncontract FractalRegistry {\\n    address root;\\n    mapping(address => bool) public delegates;\\n\\n    mapping(address => bytes32) fractalIdForAddress;\\n    mapping(string => mapping(bytes32 => bool)) userLists;\\n\\n    constructor(address _root) {\\n        root = _root;\\n    }\\n\\n    /// @param addr is Eth address\\n    /// @return FractalId as bytes32\\n    function getFractalId(address addr) external view returns (bytes32) {\\n        return fractalIdForAddress[addr];\\n    }\\n\\n    /// @notice Adds a user to the mapping of Eth address to FractalId.\\n    /// @param addr is Eth address.\\n    /// @param fractalId is FractalId in bytes32.\\n    function addUserAddress(address addr, bytes32 fractalId) external {\\n        requireMutatePermission();\\n        fractalIdForAddress[addr] = fractalId;\\n    }\\n\\n    /// @notice Removes an address from the mapping of Eth address to FractalId.\\n    /// @param addr is Eth address.\\n    function removeUserAddress(address addr) external {\\n        requireMutatePermission();\\n        delete fractalIdForAddress[addr];\\n    }\\n\\n    /// @notice Checks if a user by FractalId exists in a specific list.\\n    /// @param userId is FractalId in bytes32.\\n    /// @param listId is the list id.\\n    /// @return bool if the user is the specified list.\\n    function isUserInList(bytes32 userId, string memory listId)\\n        external\\n        view\\n        returns (bool)\\n    {\\n        return userLists[listId][userId];\\n    }\\n\\n    /// @notice Add user by FractalId to a specific list.\\n    /// @param userId is FractalId in bytes32.\\n    /// @param listId is the list id.\\n    function addUserToList(bytes32 userId, string memory listId) external {\\n        requireMutatePermission();\\n        userLists[listId][userId] = true;\\n    }\\n\\n    /// @notice Remove user by FractalId from a specific list.\\n    /// @param userId is FractalId in bytes32.\\n    /// @param listId is the list id.\\n    function removeUserFromList(bytes32 userId, string memory listId) external {\\n        requireMutatePermission();\\n        delete userLists[listId][userId];\\n    }\\n\\n    /// @notice Only root can add delegates. Delegates have mutate permissions.\\n    /// @param addr is Eth address\\n    function addDelegate(address addr) external {\\n        require(msg.sender == root, \\\"Must be root\\\");\\n        delegates[addr] = true;\\n    }\\n\\n    /// @notice Removing delegates is only posible from root or by himself.\\n    /// @param addr is Eth address\\n    function removeDelegate(address addr) external {\\n        require(\\n            msg.sender == root || msg.sender == addr,\\n            \\\"Not allowed to remove address\\\"\\n        );\\n        delete delegates[addr];\\n    }\\n\\n    function requireMutatePermission() private view {\\n        require(\\n            msg.sender == root || delegates[msg.sender],\\n            \\\"Not allowed to mutate\\\"\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0xc0300e1f6dc7e43ec84d30cab39f3e5226309ebaf77f60d67835859ad94ab483\",\"license\":\"MIT\"},\"contracts/PolytradeProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.7.0 <0.9.0;\\n\\nimport {FractalRegistry} from \\\"./FractalRegistry.sol\\\";\\n\\n/// @title Polytrade proxy\\ncontract PolytradeProxy {\\n    FractalRegistry registry;\\n    string kycLevel;\\n\\n    constructor(address _registryAddr, string memory _kycLevel) {\\n        registry = FractalRegistry(_registryAddr);\\n        kycLevel = _kycLevel;\\n    }\\n\\n    function hasPassedKYC(address addr) public view returns (bool) {\\n        bytes32 fractalId = registry.getFractalId(addr);\\n\\n        return fractalId != 0 && registry.isUserInList(fractalId, kycLevel);\\n    }\\n}\\n\",\"keccak256\":\"0x9f2502cd3424749aaeec6d01eaa83d2a09d21e9b27ccaa4cadc6295616982655\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200091e3803806200091e83398181016040528101906200003791906200034a565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600190805190602001906200008f92919062000098565b50505062000415565b828054620000a690620003df565b90600052602060002090601f016020900481019282620000ca576000855562000116565b82601f10620000e557805160ff191683800117855562000116565b8280016001018555821562000116579182015b8281111562000115578251825591602001919060010190620000f8565b5b50905062000125919062000129565b5090565b5b80821115620001445760008160009055506001016200012a565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000189826200015c565b9050919050565b6200019b816200017c565b8114620001a757600080fd5b50565b600081519050620001bb8162000190565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200021682620001cb565b810181811067ffffffffffffffff82111715620002385762000237620001dc565b5b80604052505050565b60006200024d62000148565b90506200025b82826200020b565b919050565b600067ffffffffffffffff8211156200027e576200027d620001dc565b5b6200028982620001cb565b9050602081019050919050565b60005b83811015620002b657808201518184015260208101905062000299565b83811115620002c6576000848401525b50505050565b6000620002e3620002dd8462000260565b62000241565b905082815260208101848484011115620003025762000301620001c6565b5b6200030f84828562000296565b509392505050565b600082601f8301126200032f576200032e620001c1565b5b815162000341848260208601620002cc565b91505092915050565b6000806040838503121562000364576200036362000152565b5b60006200037485828601620001aa565b925050602083015167ffffffffffffffff81111562000398576200039762000157565b5b620003a68582860162000317565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620003f857607f821691505b602082108114156200040f576200040e620003b0565b5b50919050565b6104f980620004256000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e19f6ba214610030575b600080fd5b61004a60048036038101906100459190610234565b610060565b604051610057919061027c565b60405180910390f35b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d18c216e846040518263ffffffff1660e01b81526004016100bc91906102a6565b60206040518083038186803b1580156100d457600080fd5b505afa1580156100e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010c91906102f7565b90506000801b81141580156101c9575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a535f5e98260016040518363ffffffff1660e01b815260040161017892919061043a565b60206040518083038186803b15801561019057600080fd5b505afa1580156101a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c89190610496565b5b915050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610201826101d6565b9050919050565b610211816101f6565b811461021c57600080fd5b50565b60008135905061022e81610208565b92915050565b60006020828403121561024a576102496101d1565b5b60006102588482850161021f565b91505092915050565b60008115159050919050565b61027681610261565b82525050565b6000602082019050610291600083018461026d565b92915050565b6102a0816101f6565b82525050565b60006020820190506102bb6000830184610297565b92915050565b6000819050919050565b6102d4816102c1565b81146102df57600080fd5b50565b6000815190506102f1816102cb565b92915050565b60006020828403121561030d5761030c6101d1565b5b600061031b848285016102e2565b91505092915050565b61032d816102c1565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061037a57607f821691505b6020821081141561038e5761038d610333565b5b50919050565b600082825260208201905092915050565b60008190508160005260206000209050919050565b600081546103c781610362565b6103d18186610394565b945060018216600081146103ec57600181146103fe57610431565b60ff1983168652602086019350610431565b610407856103a5565b60005b838110156104295781548189015260018201915060208101905061040a565b808801955050505b50505092915050565b600060408201905061044f6000830185610324565b818103602083015261046181846103ba565b90509392505050565b61047381610261565b811461047e57600080fd5b50565b6000815190506104908161046a565b92915050565b6000602082840312156104ac576104ab6101d1565b5b60006104ba84828501610481565b9150509291505056fea2646970667358221220cfaedd1e1aafa6769020904c37d7aa26b6e2bcf887d886a5b667fe22e881699b64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e19f6ba214610030575b600080fd5b61004a60048036038101906100459190610234565b610060565b604051610057919061027c565b60405180910390f35b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d18c216e846040518263ffffffff1660e01b81526004016100bc91906102a6565b60206040518083038186803b1580156100d457600080fd5b505afa1580156100e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010c91906102f7565b90506000801b81141580156101c9575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a535f5e98260016040518363ffffffff1660e01b815260040161017892919061043a565b60206040518083038186803b15801561019057600080fd5b505afa1580156101a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c89190610496565b5b915050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610201826101d6565b9050919050565b610211816101f6565b811461021c57600080fd5b50565b60008135905061022e81610208565b92915050565b60006020828403121561024a576102496101d1565b5b60006102588482850161021f565b91505092915050565b60008115159050919050565b61027681610261565b82525050565b6000602082019050610291600083018461026d565b92915050565b6102a0816101f6565b82525050565b60006020820190506102bb6000830184610297565b92915050565b6000819050919050565b6102d4816102c1565b81146102df57600080fd5b50565b6000815190506102f1816102cb565b92915050565b60006020828403121561030d5761030c6101d1565b5b600061031b848285016102e2565b91505092915050565b61032d816102c1565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061037a57607f821691505b6020821081141561038e5761038d610333565b5b50919050565b600082825260208201905092915050565b60008190508160005260206000209050919050565b600081546103c781610362565b6103d18186610394565b945060018216600081146103ec57600181146103fe57610431565b60ff1983168652602086019350610431565b610407856103a5565b60005b838110156104295781548189015260018201915060208101905061040a565b808801955050505b50505092915050565b600060408201905061044f6000830185610324565b818103602083015261046181846103ba565b90509392505050565b61047381610261565b811461047e57600080fd5b50565b6000815190506104908161046a565b92915050565b6000602082840312156104ac576104ab6101d1565b5b60006104ba84828501610481565b9150509291505056fea2646970667358221220cfaedd1e1aafa6769020904c37d7aa26b6e2bcf887d886a5b667fe22e881699b64736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "title": "Polytrade proxy",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 202,
        "contract": "contracts/PolytradeProxy.sol:PolytradeProxy",
        "label": "registry",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(FractalRegistry)194"
      },
      {
        "astId": 204,
        "contract": "contracts/PolytradeProxy.sol:PolytradeProxy",
        "label": "kycLevel",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_contract(FractalRegistry)194": {
        "encoding": "inplace",
        "label": "contract FractalRegistry",
        "numberOfBytes": "20"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}