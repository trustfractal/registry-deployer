{
  "address": "0x8ebC0903E851dd9D15d03B4B04470709913Bc027",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_registryAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_kycLevel",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "hasPassedKYC",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x54352e30ed2369cf37714745c47442dccc6b6c172527587a1a36d9c6fa16446d",
  "receipt": {
    "to": null,
    "from": "0xC61bA26E1C0F463Cd1BB57C962c6e7E411E79cb4",
    "contractAddress": "0x8ebC0903E851dd9D15d03B4B04470709913Bc027",
    "transactionIndex": 0,
    "gasUsed": "384766",
    "logsBloom": "0x
    "blockHash": "0x53d16c3359e10399200689c69f5dddbf3b1b3561016047d7b35da56ba98f3367",
    "transactionHash": "0x54352e30ed2369cf37714745c47442dccc6b6c172527587a1a36d9c6fa16446d",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 27342816,
        "transactionHash": "0x54352e30ed2369cf37714745c47442dccc6b6c172527587a1a36d9c6fa16446d",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000c61ba26e1c0f463cd1bb57c962c6e7e411e79cb4",
          "0x000000000000000000000000c26880a0af2ea0c7e8130e6ec47af756465452e8"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000009f70dec4961c400000000000000000000000000000000000000000000000001ea0ea22a1135af00000000000000000000000000000000000000000000124b3eb97e0b747b80eb00000000000000000000000000000000000000000000000001e017943dc7d3eb00000000000000000000000000000000000000000000124b3ec3751960c4e2af",
        "logIndex": 0,
        "blockHash": "0x53d16c3359e10399200689c69f5dddbf3b1b3561016047d7b35da56ba98f3367"
      }
    ],
    "blockNumber": 27342816,
    "cumulativeGasUsed": "384766",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xCf6D5E4B749D823889631e897dD8cd70e23be953",
    "plus"
  ],
  "numDeployments": 1,
  "solcInputHash": "d411036c139dfe4bbfcaedbdc63e0365",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registryAddr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_kycLevel\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"hasPassedKYC\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Polytrade proxy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PolytradeProxy.sol\":\"PolytradeProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FractalRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.7.0 <0.9.0;\\n\\n/// @title Fractal registry v0\\n/// @author Antoni Dikov and Shelby Doolittle\\ncontract FractalRegistry {\\n    address root;\\n    mapping(address => bool) public delegates;\\n\\n    mapping(address => bytes32) fractalIdForAddress;\\n    mapping(string => mapping(bytes32 => bool)) userLists;\\n\\n    constructor(address _root) {\\n        root = _root;\\n    }\\n\\n    /// @param addr is Eth address\\n    /// @return FractalId as bytes32\\n    function getFractalId(address addr) external view returns (bytes32) {\\n        return fractalIdForAddress[addr];\\n    }\\n\\n    /// @notice Adds a user to the mapping of Eth address to FractalId.\\n    /// @param addr is Eth address.\\n    /// @param fractalId is FractalId in bytes32.\\n    function addUserAddress(address addr, bytes32 fractalId) external {\\n        requireMutatePermission();\\n        fractalIdForAddress[addr] = fractalId;\\n    }\\n\\n    /// @notice Removes an address from the mapping of Eth address to FractalId.\\n    /// @param addr is Eth address.\\n    function removeUserAddress(address addr) external {\\n        requireMutatePermission();\\n        delete fractalIdForAddress[addr];\\n    }\\n\\n    /// @notice Checks if a user by FractalId exists in a specific list.\\n    /// @param userId is FractalId in bytes32.\\n    /// @param listId is the list id.\\n    /// @return bool if the user is the specified list.\\n    function isUserInList(bytes32 userId, string memory listId)\\n        external\\n        view\\n        returns (bool)\\n    {\\n        return userLists[listId][userId];\\n    }\\n\\n    /// @notice Add user by FractalId to a specific list.\\n    /// @param userId is FractalId in bytes32.\\n    /// @param listId is the list id.\\n    function addUserToList(bytes32 userId, string memory listId) external {\\n        requireMutatePermission();\\n        userLists[listId][userId] = true;\\n    }\\n\\n    /// @notice Remove user by FractalId from a specific list.\\n    /// @param userId is FractalId in bytes32.\\n    /// @param listId is the list id.\\n    function removeUserFromList(bytes32 userId, string memory listId) external {\\n        requireMutatePermission();\\n        delete userLists[listId][userId];\\n    }\\n\\n    /// @notice Only root can add delegates. Delegates have mutate permissions.\\n    /// @param addr is Eth address\\n    function addDelegate(address addr) external {\\n        require(msg.sender == root, \\\"Must be root\\\");\\n        delegates[addr] = true;\\n    }\\n\\n    /// @notice Removing delegates is only posible from root or by himself.\\n    /// @param addr is Eth address\\n    function removeDelegate(address addr) external {\\n        require(\\n            msg.sender == root || msg.sender == addr,\\n            \\\"Not allowed to remove address\\\"\\n        );\\n        delete delegates[addr];\\n    }\\n\\n    function requireMutatePermission() private view {\\n        require(\\n            msg.sender == root || delegates[msg.sender],\\n            \\\"Not allowed to mutate\\\"\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0xc0300e1f6dc7e43ec84d30cab39f3e5226309ebaf77f60d67835859ad94ab483\",\"license\":\"MIT\"},\"contracts/PolytradeProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.7.0 <0.9.0;\\n\\nimport {FractalRegistry} from \\\"./FractalRegistry.sol\\\";\\n\\n/// @title Polytrade proxy\\ncontract PolytradeProxy {\\n    FractalRegistry registry;\\n    string kycLevel;\\n\\n    constructor(address _registryAddr, string memory _kycLevel) {\\n        registry = FractalRegistry(_registryAddr);\\n        kycLevel = _kycLevel;\\n    }\\n\\n    function hasPassedKYC(address addr) public view returns (bool) {\\n        return registry.isUserInList(registry.getFractalId(addr), kycLevel);\\n    }\\n}\\n\",\"keccak256\":\"0x4b6215bb6c6bbcc257e5ac1a187cb3c3c5c53f716fb1c7c69bdeac8557839c0f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200090b3803806200090b83398181016040528101906200003791906200034a565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600190805190602001906200008f92919062000098565b50505062000415565b828054620000a690620003df565b90600052602060002090601f016020900481019282620000ca576000855562000116565b82601f10620000e557805160ff191683800117855562000116565b8280016001018555821562000116579182015b8281111562000115578251825591602001919060010190620000f8565b5b50905062000125919062000129565b5090565b5b80821115620001445760008160009055506001016200012a565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000189826200015c565b9050919050565b6200019b816200017c565b8114620001a757600080fd5b50565b600081519050620001bb8162000190565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200021682620001cb565b810181811067ffffffffffffffff82111715620002385762000237620001dc565b5b80604052505050565b60006200024d62000148565b90506200025b82826200020b565b919050565b600067ffffffffffffffff8211156200027e576200027d620001dc565b5b6200028982620001cb565b9050602081019050919050565b60005b83811015620002b657808201518184015260208101905062000299565b83811115620002c6576000848401525b50505050565b6000620002e3620002dd8462000260565b62000241565b905082815260208101848484011115620003025762000301620001c6565b5b6200030f84828562000296565b509392505050565b600082601f8301126200032f576200032e620001c1565b5b815162000341848260208601620002cc565b91505092915050565b6000806040838503121562000364576200036362000152565b5b60006200037485828601620001aa565b925050602083015167ffffffffffffffff81111562000398576200039762000157565b5b620003a68582860162000317565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620003f857607f821691505b602082108114156200040f576200040e620003b0565b5b50919050565b6104e680620004256000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e19f6ba214610030575b600080fd5b61004a60048036038101906100459190610221565b610060565b6040516100579190610269565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a535f5e960008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d18c216e856040518263ffffffff1660e01b81526004016100f89190610293565b60206040518083038186803b15801561011057600080fd5b505afa158015610124573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014891906102e4565b60016040518363ffffffff1660e01b8152600401610167929190610427565b60206040518083038186803b15801561017f57600080fd5b505afa158015610193573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b79190610483565b9050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101ee826101c3565b9050919050565b6101fe816101e3565b811461020957600080fd5b50565b60008135905061021b816101f5565b92915050565b600060208284031215610237576102366101be565b5b60006102458482850161020c565b91505092915050565b60008115159050919050565b6102638161024e565b82525050565b600060208201905061027e600083018461025a565b92915050565b61028d816101e3565b82525050565b60006020820190506102a86000830184610284565b92915050565b6000819050919050565b6102c1816102ae565b81146102cc57600080fd5b50565b6000815190506102de816102b8565b92915050565b6000602082840312156102fa576102f96101be565b5b6000610308848285016102cf565b91505092915050565b61031a816102ae565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061036757607f821691505b6020821081141561037b5761037a610320565b5b50919050565b600082825260208201905092915050565b60008190508160005260206000209050919050565b600081546103b48161034f565b6103be8186610381565b945060018216600081146103d957600181146103eb5761041e565b60ff198316865260208601935061041e565b6103f485610392565b60005b83811015610416578154818901526001820191506020810190506103f7565b808801955050505b50505092915050565b600060408201905061043c6000830185610311565b818103602083015261044e81846103a7565b90509392505050565b6104608161024e565b811461046b57600080fd5b50565b60008151905061047d81610457565b92915050565b600060208284031215610499576104986101be565b5b60006104a78482850161046e565b9150509291505056fea2646970667358221220bae20838e184a8e73a168834b273cc19ba088024d2caa2e35db1a5d944dbbdfb64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e19f6ba214610030575b600080fd5b61004a60048036038101906100459190610221565b610060565b6040516100579190610269565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a535f5e960008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d18c216e856040518263ffffffff1660e01b81526004016100f89190610293565b60206040518083038186803b15801561011057600080fd5b505afa158015610124573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014891906102e4565b60016040518363ffffffff1660e01b8152600401610167929190610427565b60206040518083038186803b15801561017f57600080fd5b505afa158015610193573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b79190610483565b9050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101ee826101c3565b9050919050565b6101fe816101e3565b811461020957600080fd5b50565b60008135905061021b816101f5565b92915050565b600060208284031215610237576102366101be565b5b60006102458482850161020c565b91505092915050565b60008115159050919050565b6102638161024e565b82525050565b600060208201905061027e600083018461025a565b92915050565b61028d816101e3565b82525050565b60006020820190506102a86000830184610284565b92915050565b6000819050919050565b6102c1816102ae565b81146102cc57600080fd5b50565b6000815190506102de816102b8565b92915050565b6000602082840312156102fa576102f96101be565b5b6000610308848285016102cf565b91505092915050565b61031a816102ae565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061036757607f821691505b6020821081141561037b5761037a610320565b5b50919050565b600082825260208201905092915050565b60008190508160005260206000209050919050565b600081546103b48161034f565b6103be8186610381565b945060018216600081146103d957600181146103eb5761041e565b60ff198316865260208601935061041e565b6103f485610392565b60005b83811015610416578154818901526001820191506020810190506103f7565b808801955050505b50505092915050565b600060408201905061043c6000830185610311565b818103602083015261044e81846103a7565b90509392505050565b6104608161024e565b811461046b57600080fd5b50565b60008151905061047d81610457565b92915050565b600060208284031215610499576104986101be565b5b60006104a78482850161046e565b9150509291505056fea2646970667358221220bae20838e184a8e73a168834b273cc19ba088024d2caa2e35db1a5d944dbbdfb64736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "title": "Polytrade proxy",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 202,
        "contract": "contracts/PolytradeProxy.sol:PolytradeProxy",
        "label": "registry",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(FractalRegistry)194"
      },
      {
        "astId": 204,
        "contract": "contracts/PolytradeProxy.sol:PolytradeProxy",
        "label": "kycLevel",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_contract(FractalRegistry)194": {
        "encoding": "inplace",
        "label": "contract FractalRegistry",
        "numberOfBytes": "20"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}