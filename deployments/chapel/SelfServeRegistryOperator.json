{
  "address": "0x75ADb60A0bD28EE81133872401A76A55E215ED47",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registryAddr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "fractalId",
          "type": "bytes32"
        }
      ],
      "name": "addSelf",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "listId",
          "type": "string"
        }
      ],
      "name": "addSelfToList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "fractalId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "listId",
          "type": "string"
        }
      ],
      "name": "addSelfToRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "removeSelf",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "listId",
          "type": "string"
        }
      ],
      "name": "removeSelfFromList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "listId",
          "type": "string"
        }
      ],
      "name": "removeSelfFromRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x0ba0d2b9435459e621acb24825616efde5036a19f8a01fd9c6aed93837bce83f",
  "receipt": {
    "to": null,
    "from": "0x89f3648B47cD32d7A861241C84ad887d04E118bC",
    "contractAddress": "0x75ADb60A0bD28EE81133872401A76A55E215ED47",
    "transactionIndex": 3,
    "gasUsed": "585384",
    "logsBloom": "0x
    "blockHash": "0x11b45cf034adb5c35f71edc6d4a3401e33d4eaa9c9f78d5b6942199731094eba",
    "transactionHash": "0x0ba0d2b9435459e621acb24825616efde5036a19f8a01fd9c6aed93837bce83f",
    "logs": [],
    "blockNumber": 24020924,
    "cumulativeGasUsed": "694517",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x4D9DE1bb481B9dA37A7a7E3a07F6f60654fEe7BB"
  ],
  "numDeployments": 1,
  "solcInputHash": "ff93c34fde1a5977707c4e77be929439",
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registryAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"fractalId\",\"type\":\"bytes32\"}],\"name\":\"addSelf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"listId\",\"type\":\"string\"}],\"name\":\"addSelfToList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"fractalId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"listId\",\"type\":\"string\"}],\"name\":\"addSelfToRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeSelf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"listId\",\"type\":\"string\"}],\"name\":\"removeSelfFromList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"listId\",\"type\":\"string\"}],\"name\":\"removeSelfFromRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"SelfServeRegistryOperator\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SelfServeRegistryOperator.sol\":\"SelfServeRegistryOperator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FractalRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.7.0 <0.9.0;\\n\\n/// @title Fractal registry v0\\n/// @author Antoni Dikov and Shelby Doolittle\\ncontract FractalRegistry {\\n    address root;\\n    mapping(address => bool) public delegates;\\n\\n    mapping(address => bytes32) fractalIdForAddress;\\n    mapping(string => mapping(bytes32 => bool)) userLists;\\n\\n    constructor(address _root) {\\n        root = _root;\\n    }\\n\\n    /// @param addr is Eth address\\n    /// @return FractalId as bytes32\\n    function getFractalId(address addr) external view returns (bytes32) {\\n        return fractalIdForAddress[addr];\\n    }\\n\\n    /// @notice Adds a user to the mapping of Eth address to FractalId.\\n    /// @param addr is Eth address.\\n    /// @param fractalId is FractalId in bytes32.\\n    function addUserAddress(address addr, bytes32 fractalId) external {\\n        requireMutatePermission();\\n        fractalIdForAddress[addr] = fractalId;\\n    }\\n\\n    /// @notice Removes an address from the mapping of Eth address to FractalId.\\n    /// @param addr is Eth address.\\n    function removeUserAddress(address addr) external {\\n        requireMutatePermission();\\n        delete fractalIdForAddress[addr];\\n    }\\n\\n    /// @notice Checks if a user by FractalId exists in a specific list.\\n    /// @param userId is FractalId in bytes32.\\n    /// @param listId is the list id.\\n    /// @return bool if the user is the specified list.\\n    function isUserInList(bytes32 userId, string memory listId)\\n        external\\n        view\\n        returns (bool)\\n    {\\n        return userLists[listId][userId];\\n    }\\n\\n    /// @notice Add user by FractalId to a specific list.\\n    /// @param userId is FractalId in bytes32.\\n    /// @param listId is the list id.\\n    function addUserToList(bytes32 userId, string memory listId) external {\\n        requireMutatePermission();\\n        userLists[listId][userId] = true;\\n    }\\n\\n    /// @notice Remove user by FractalId from a specific list.\\n    /// @param userId is FractalId in bytes32.\\n    /// @param listId is the list id.\\n    function removeUserFromList(bytes32 userId, string memory listId) external {\\n        requireMutatePermission();\\n        delete userLists[listId][userId];\\n    }\\n\\n    /// @notice Only root can add delegates. Delegates have mutate permissions.\\n    /// @param addr is Eth address\\n    function addDelegate(address addr) external {\\n        require(msg.sender == root, \\\"Must be root\\\");\\n        delegates[addr] = true;\\n    }\\n\\n    /// @notice Removing delegates is only posible from root or by himself.\\n    /// @param addr is Eth address\\n    function removeDelegate(address addr) external {\\n        require(\\n            msg.sender == root || msg.sender == addr,\\n            \\\"Not allowed to remove address\\\"\\n        );\\n        delete delegates[addr];\\n    }\\n\\n    function requireMutatePermission() private view {\\n        require(\\n            msg.sender == root || delegates[msg.sender],\\n            \\\"Not allowed to mutate\\\"\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0xc0300e1f6dc7e43ec84d30cab39f3e5226309ebaf77f60d67835859ad94ab483\",\"license\":\"MIT\"},\"contracts/SelfServeRegistryOperator.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.7.0 <0.9.0;\\n\\nimport {FractalRegistry} from \\\"./FractalRegistry.sol\\\";\\n\\n/// @title SelfServeRegistryOperator\\ncontract SelfServeRegistryOperator {\\n    FractalRegistry registry;\\n\\n    constructor(address registryAddr) {\\n        registry = FractalRegistry(registryAddr);\\n    }\\n\\n    function addSelf(bytes32 fractalId) public {\\n        registry.addUserAddress(msg.sender, fractalId);\\n    }\\n\\n    function removeSelf() public {\\n        registry.removeUserAddress(msg.sender);\\n    }\\n\\n    function addSelfToList(string memory listId) public {\\n        registry.addUserToList(sendersFractalId(), listId);\\n    }\\n\\n    function removeSelfFromList(string memory listId) public {\\n        registry.removeUserFromList(sendersFractalId(), listId);\\n    }\\n\\n    function sendersFractalId() internal view returns(bytes32) {\\n        bytes32 fractalId = registry.getFractalId(msg.sender);\\n        require(fractalId != 0, \\\"Sender's address must already be in the registry. Call addSelf first.\\\");\\n        return fractalId;\\n    }\\n\\n    function addSelfToRegistry(bytes32 fractalId, string memory listId) external {\\n        addSelf(fractalId);\\n        addSelfToList(listId);\\n    }\\n\\n    function removeSelfFromRegistry(string memory listId) external {\\n        removeSelfFromList(listId);\\n        removeSelf();\\n    }\\n}\\n\",\"keccak256\":\"0x55e3bf2f0c58f894fcbd01d09555fca024ccae27440ca1c0b23de2e7cce5481e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610a49380380610a49833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b610932806101176000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631454fc4f146100675780634d77db7b146100835780635e898dac1461009f5780636e05f389146100a95780639acdb259146100c5578063ffa56e29146100e1575b600080fd5b610081600480360381019061007c91906105b7565b6100fd565b005b61009d60048036038101906100989190610636565b610194565b005b6100a7610224565b005b6100c360048036038101906100be91906105b7565b6102b1565b005b6100df60048036038101906100da9190610663565b6102c5565b005b6100fb60048036038101906100f691906105b7565b6102db565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370491d7e610141610372565b836040518363ffffffff1660e01b815260040161015f92919061074d565b600060405180830381600087803b15801561017957600080fd5b505af115801561018d573d6000803e3d6000fd5b5050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef8b577333836040518363ffffffff1660e01b81526004016101ef9291906107be565b600060405180830381600087803b15801561020957600080fd5b505af115801561021d573d6000803e3d6000fd5b5050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a2af447a336040518263ffffffff1660e01b815260040161027d91906107e7565b600060405180830381600087803b15801561029757600080fd5b505af11580156102ab573d6000803e3d6000fd5b50505050565b6102ba816102db565b6102c2610224565b50565b6102ce82610194565b6102d7816100fd565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ce8767b261031f610372565b836040518363ffffffff1660e01b815260040161033d92919061074d565b600060405180830381600087803b15801561035757600080fd5b505af115801561036b573d6000803e3d6000fd5b5050505050565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d18c216e336040518263ffffffff1660e01b81526004016103ce91906107e7565b602060405180830381865afa1580156103eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040f9190610817565b90506000801b8103610456576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044d906108dc565b60405180910390fd5b8091505090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104c48261047b565b810181811067ffffffffffffffff821117156104e3576104e261048c565b5b80604052505050565b60006104f661045d565b905061050282826104bb565b919050565b600067ffffffffffffffff8211156105225761052161048c565b5b61052b8261047b565b9050602081019050919050565b82818337600083830152505050565b600061055a61055584610507565b6104ec565b90508281526020810184848401111561057657610575610476565b5b610581848285610538565b509392505050565b600082601f83011261059e5761059d610471565b5b81356105ae848260208601610547565b91505092915050565b6000602082840312156105cd576105cc610467565b5b600082013567ffffffffffffffff8111156105eb576105ea61046c565b5b6105f784828501610589565b91505092915050565b6000819050919050565b61061381610600565b811461061e57600080fd5b50565b6000813590506106308161060a565b92915050565b60006020828403121561064c5761064b610467565b5b600061065a84828501610621565b91505092915050565b6000806040838503121561067a57610679610467565b5b600061068885828601610621565b925050602083013567ffffffffffffffff8111156106a9576106a861046c565b5b6106b585828601610589565b9150509250929050565b6106c881610600565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156107085780820151818401526020810190506106ed565b60008484015250505050565b600061071f826106ce565b61072981856106d9565b93506107398185602086016106ea565b6107428161047b565b840191505092915050565b600060408201905061076260008301856106bf565b81810360208301526107748184610714565b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107a88261077d565b9050919050565b6107b88161079d565b82525050565b60006040820190506107d360008301856107af565b6107e060208301846106bf565b9392505050565b60006020820190506107fc60008301846107af565b92915050565b6000815190506108118161060a565b92915050565b60006020828403121561082d5761082c610467565b5b600061083b84828501610802565b91505092915050565b7f53656e64657227732061646472657373206d75737420616c726561647920626560008201527f20696e207468652072656769737472792e2043616c6c2061646453656c66206660208201527f697273742e000000000000000000000000000000000000000000000000000000604082015250565b60006108c66045836106d9565b91506108d182610844565b606082019050919050565b600060208201905081810360008301526108f5816108b9565b905091905056fea2646970667358221220b369762407f9fb7c47ee4ca6b927af6458649d2855f011bcda9850a443405ebf64736f6c63430008100033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80631454fc4f146100675780634d77db7b146100835780635e898dac1461009f5780636e05f389146100a95780639acdb259146100c5578063ffa56e29146100e1575b600080fd5b610081600480360381019061007c91906105b7565b6100fd565b005b61009d60048036038101906100989190610636565b610194565b005b6100a7610224565b005b6100c360048036038101906100be91906105b7565b6102b1565b005b6100df60048036038101906100da9190610663565b6102c5565b005b6100fb60048036038101906100f691906105b7565b6102db565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370491d7e610141610372565b836040518363ffffffff1660e01b815260040161015f92919061074d565b600060405180830381600087803b15801561017957600080fd5b505af115801561018d573d6000803e3d6000fd5b5050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef8b577333836040518363ffffffff1660e01b81526004016101ef9291906107be565b600060405180830381600087803b15801561020957600080fd5b505af115801561021d573d6000803e3d6000fd5b5050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a2af447a336040518263ffffffff1660e01b815260040161027d91906107e7565b600060405180830381600087803b15801561029757600080fd5b505af11580156102ab573d6000803e3d6000fd5b50505050565b6102ba816102db565b6102c2610224565b50565b6102ce82610194565b6102d7816100fd565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ce8767b261031f610372565b836040518363ffffffff1660e01b815260040161033d92919061074d565b600060405180830381600087803b15801561035757600080fd5b505af115801561036b573d6000803e3d6000fd5b5050505050565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d18c216e336040518263ffffffff1660e01b81526004016103ce91906107e7565b602060405180830381865afa1580156103eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040f9190610817565b90506000801b8103610456576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044d906108dc565b60405180910390fd5b8091505090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104c48261047b565b810181811067ffffffffffffffff821117156104e3576104e261048c565b5b80604052505050565b60006104f661045d565b905061050282826104bb565b919050565b600067ffffffffffffffff8211156105225761052161048c565b5b61052b8261047b565b9050602081019050919050565b82818337600083830152505050565b600061055a61055584610507565b6104ec565b90508281526020810184848401111561057657610575610476565b5b610581848285610538565b509392505050565b600082601f83011261059e5761059d610471565b5b81356105ae848260208601610547565b91505092915050565b6000602082840312156105cd576105cc610467565b5b600082013567ffffffffffffffff8111156105eb576105ea61046c565b5b6105f784828501610589565b91505092915050565b6000819050919050565b61061381610600565b811461061e57600080fd5b50565b6000813590506106308161060a565b92915050565b60006020828403121561064c5761064b610467565b5b600061065a84828501610621565b91505092915050565b6000806040838503121561067a57610679610467565b5b600061068885828601610621565b925050602083013567ffffffffffffffff8111156106a9576106a861046c565b5b6106b585828601610589565b9150509250929050565b6106c881610600565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156107085780820151818401526020810190506106ed565b60008484015250505050565b600061071f826106ce565b61072981856106d9565b93506107398185602086016106ea565b6107428161047b565b840191505092915050565b600060408201905061076260008301856106bf565b81810360208301526107748184610714565b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107a88261077d565b9050919050565b6107b88161079d565b82525050565b60006040820190506107d360008301856107af565b6107e060208301846106bf565b9392505050565b60006020820190506107fc60008301846107af565b92915050565b6000815190506108118161060a565b92915050565b60006020828403121561082d5761082c610467565b5b600061083b84828501610802565b91505092915050565b7f53656e64657227732061646472657373206d75737420616c726561647920626560008201527f20696e207468652072656769737472792e2043616c6c2061646453656c66206660208201527f697273742e000000000000000000000000000000000000000000000000000000604082015250565b60006108c66045836106d9565b91506108d182610844565b606082019050919050565b600060208201905081810360008301526108f5816108b9565b905091905056fea2646970667358221220b369762407f9fb7c47ee4ca6b927af6458649d2855f011bcda9850a443405ebf64736f6c63430008100033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "title": "SelfServeRegistryOperator",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 202,
        "contract": "contracts/SelfServeRegistryOperator.sol:SelfServeRegistryOperator",
        "label": "registry",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(FractalRegistry)194"
      }
    ],
    "types": {
      "t_contract(FractalRegistry)194": {
        "encoding": "inplace",
        "label": "contract FractalRegistry",
        "numberOfBytes": "20"
      }
    }
  }
}